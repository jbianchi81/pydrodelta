import subprocess

selected_files = [
    "calibration.calibration",
    "calibration.downhill_simplex_calibration",
    "calibration.linear_regression_calibration",
    "descriptors.bool_descriptor",
    "descriptors.bool_or_none_descriptor",
    "descriptors.dataframe_descriptor",
    "descriptors.datetime_descriptor",
    "descriptors.dict_descriptor",
    "descriptors.duration_descriptor_default_none",
    "descriptors.duration_descriptor",
    "descriptors.float_descriptor",
    "descriptors.int_descriptor",
    "descriptors.list_or_dict_descriptor",
    "descriptors.string_descriptor",
    "interpolated_origin",
    "derived_origin",
    "procedure_boundary",
    "procedure_function",
    "procedure_function_results",
    "procedures.difference",
    "procedures.exponential_fit",
    "procedures.expression",
    "procedures.generic_linear_channel",
    "procedures.gr4j",
    "procedures.grp",
    "procedures.hosh4p1l",
    "procedures.hosh4p1lnash",
    "procedures.hosh4p1luh",
    "procedures.junction",
    "procedures.linear_channel",
    "procedures.linear_combination_2b",
    "procedures.linear_combination_3b",
    "procedures.linear_combination_4b",
    "procedures.linear_combination",
    "procedures.linear_fit",
    "procedures.linear_net_3",
    "procedures.muskingumchannel",
    "procedures.polynomial",
    "procedures.pq",
    "procedures.sac_enkf",
    "procedures.sacramento_simplified",
    "procedures.uh_linear_channel",
    "types.adjust_from_dict",
    "types.forecast_step_dict",
    "types.node_variable_dict",
    "types.series_dict",
    "types.api_config_dict",
    "types.hec_node_dict",
    "types.observed_node_variable_dict",
    "types.series_prono_dict",
    "types.basin_pars_dict",
    "types.plot_params_dict",
    "types.tvp",
    "types.boundary_dict",
    "types.interpolated_origin_dict",
    "types.plot_variable_params_dict",
    "types.typed_list",
    "types.enhanced_typed_list",
    "types.corrida_dict",
    "types.linear_combination_dict",
    "types.procedure_boundary_dict",
    "types.derived_node_variable_dict",
    "types.linear_combination_parameters_dict",
    "types.derived_origin_dict",
    "types.node_dict",
    "types.s3_config_dict",
    "a5",
    "config",
    "a5",
    "node_serie",
    "a5_schemas",
    "node_variable",
    "analysis",
    "observed_node_variable",
    "base",
    "persistence",
    "config",
    "plan",
    "derived_node_serie",
    "procedure_boundary",
    "derived_node_variable",
    "procedure_function",
    "derived_origin",
    "procedure_function_results",
    "downhill_simplex",
    "procedure",
    "function_boundary",
    "pydrology",
    "result_statistics",
    "interpolated_origin",
    "series_data",
    "model_parameter",
    "simulation",
    "model_state",
    "topology",
    "node",
    "util",
    "node_serie_prono_metadata",
    "validation",
    "node_serie_prono"
]

index_rows = []
for filename in selected_files:
    path = "pydrodelta.%s" % filename
    output = open("doc/%s.md" % filename,"w")
    subprocess.run(["pydoc-markdown", "-I","src","-m",path,"--render-toc"],stdout = output)
    output.close()
    index_rows.append("- [%s](../blob/main/doc/%s.md)" % (filename ,filename))

index_md = "# Modules\n\n%s" % "\n".join(index_rows)
with open("doc/api_index.md","w") as f:
    f.write(index_md)
    f.close()