{
    "$id": "data/schemas/plan.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "Plan",
    "type": "object",
    "properties": {
      "name": {
        "type": "string"
      },
      "id": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "integer"
          }
        ]
      },
      "topology": {
        "description": "Either topology object or topology file path",
        "oneOf": [
          {
            "$ref": "topology.json"
          },
          {
            "type": "string"
          }
        ]
      },
      "procedures": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "$ref": "#/$defs/Procedure"
            },
            {
              "type": "string"
            }
          ]
        }
      }
    },
    "required": [
      "id",
      "name",
      "topology",
      "procedures"
    ],
    "additionalProperties": false,
    "$defs": {
      "Procedure": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ]
          },
          "boundaries": {
            "description": "Either array of NodeVariables objects or tuple with node id and variable id",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "topology.json#/$defs/NodeVariable"
                },
                {
                  "$ref": "#/$defs/NodeVariableIdTuple"
                }
              ]
            }
          },
          "outputs": {
            "description": "output node variables where to write procedure outcome",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "topology.json#/$defs/NodeVariable"
                },
                {
                  "$ref": "#/$defs/NodeVariableIdTuple"
                }
              ]
            }
          },
          "initial_states": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "function": {
            "oneOf": [
              {
                "$ref": "#/$defs/HecRasProcedureFunction"
              },
              {
                "$ref": "#/$defs/ProcedureFunction"
              }
            ]
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "time_interval": {
            "$ref": "topology.json#/$defs/TimeInterval"
          },
          "time_offset": {
            "$ref": "topology.json#/$defs/TimeInterval"
          }
        },
        "required": [
          "id",
          "input_nodes",
          "output_nodes",
          "type"
        ]
      },
      "NodeVariableIdTuple": {
        "type": "array",
        "minItems": 2,
        "maxItems": 2,
        "items": {
          "type": "integer"
        }
      },
      "ProcedureFunction": {
        "type": "object",
        "description": "The transformation function of the procedure",
        "properties": {
          "type": {
            "description": "The id or class name of the procedureFunction type. One of 'ProcedureFunction', 'HecRasProcedureFunction', 'HecRas'",
            "type": "string",
            "enum": [
              "ProcedureFunction",
              "HecRasProcedureFunction",
              "HecRas"
            ]
          },
          "parameters": {
            "description": "list of function parameter values",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "initial_states": {
            "description": "list of function initial state values",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "HecRasProcedureFunction": {
        "allOf": [
          {
            "$ref": "#/$defs/ProcedureFunction"
          }
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "HecRas"
            ]
          },
          "workspace": {
            "description": "path of workspace",
            "type": "string"
          },
          "model_path": {
            "description": "path of model",
            "type": "string"
          },
          "initial_load": {
            "description": "if true, generates topology from model files",
            "type": "boolean"
          },
          "project_name": {
            "type": "string"
          },
          "model_config": {
            "type": "object",
            "properties": {
              "geometry_file": {
                "type": "string"
              },
              "plan_file": {
                "type": "string"
              },
              "unsteady_file": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "workspace",
          "model_path",
          "project_name"
        ]
      },
      "additionalProperties": false
    }
}