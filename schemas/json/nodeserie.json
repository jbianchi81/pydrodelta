{
  "$id": "nodeserie.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "NodeSerie",
  "type": "object",
  "properties": {
    "series_id": {
      "type": "integer",
      "description": "Series identifier"
    },
    "tipo": {
      "$ref": "seriestipo.json"
    },
    "lim_outliers": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "minItems": 2,
      "examples": [
        [
          -10,
          10
        ]
      ],
      "description": "Minimum and maximum values for outliers removal"
    },
    "lim_jump": {
      "type": "number",
      "description": "Maximum absolute value for jump detection"
    },
    "x_offset": {
      "$ref": "timeinterval.json",
      "description": "Time offset applied to the timestamps of the input data on import",
      "default": 0
    },
    "y_offset": {
      "type": "number",
      "description": "Offset applied to the values of the input data on import",
      "default": 0
    },
    "comment": {
      "type": "string",
      "description": "Comment about this series"
    },
    "moving_average": {
      "$ref": "timeinterval.json",
      "description": "Compute a moving average using a time window of this size to the input data"
    },
    "csv_file": {
      "type": "string",
      "description": "Read data from this csv file. The csv file must have one column for the timestamps called 'timestart' and one column per series of data with the series_id in the header",
      "examples": [
        "path/input_data.csv"
      ]
    },
    "json_file": {
      "type": "string",
      "description": "Read data from this json or yaml file. The file must validate against a5 'series' schema, with 'observaciones' key containing a list of time value pairs",
      "examples": [
        "path/input_data.json"
      ]
    },
    "observations": {
      "type": "array",
      "description": "list of observations. Each element must be an ObservationDict or an ObservationArray",
      "items": {
        "oneOf": [
          {
            "$ref": "observationdict.json"
          },
          {
            "$ref": "observationarray.json"
          }
        ] 
      }
    },
    "save_post": {
      "type": "string",
      "description": "Local path where to save output data sent to API (when uploading analysis results)",
      "examples": [
        "path/output_data.json"
      ]
    },
    "name": {
      "type": "string",
      "description": "Series name"
    },
    "required": {
      "type": "boolean",
      "description": "Raise error if no data found",
      "default": false
    },
    "output_file": {
      "type": "string",
      "description": "save data into this file"
    },
    "output_format": {
      "type": "string",
      "description": "save data into output_file with this format",
      "default": "json"
    },
    "output_schema": {
      "type": "string",
      "description": "save json data using this schema",
      "default": "dict"
    },
    "agg_func": {
      "type": "string",
      "enum": [
        "sum",
        "first",
        "last",
        "mean",
        "median",
        "min",
        "max",
        "std",
        "var",
        "prod",
        "mad"
      ],
      "description": "When regularizing, aggregate observations using agg_func function. If set, interpolation is not performed"
    }
  },
  "required": [
    "series_id"
  ]
}
