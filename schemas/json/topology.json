{
  "$id": "topology.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Topology",
  "type": "object",
  "description": "The topology defines a list of nodes which represent stations and basins. These nodes are identified with a node_id and must contain one or many variables each, which represent the hydrologic observed/simulated properties at that node (such as discharge, precipitation, etc.). They are identified with a variable_id and may contain one or many ordered series, which contain the timestamped values. If series are missing from a variable, it is assumed that observations are not available for said variable at said node. Additionally, series_prono may be defined to represent timeseries of said variable at said node that are originated by an external modelling procedure. If series are available, said series_prono may be automatically fitted to the observed data by means of a linear regression. Such a procedure may be useful to extend the temporal extent of the variable into the forecast horizon so as to cover the full time domain of the plan. Finally, one or many series_sim may be added and it is where simulated data (as a result of a procedure) will be stored. All series have a series_id identifier which is used to read/write data from data source whether it be an alerta5DBIO instance or a csv file.",
  "properties": {
    "timestart": {
      "description": "start date of observations period (datetime or timedelta relative to now)",
      "$ref": "dateorinterval.json"
    },
    "timeend": {
      "description": "end date of observations period (datetime or timedelta relative to now)",
      "$ref": "dateorinterval.json"
    },
    "forecast_timeend": {
      "description": "forecast horizon (datetime or timedelta relative to timeend)",
      "$ref": "dateorinterval.json"
    },
    "time_offset": {
      "description": "time of day where timesteps start",
      "$ref": "dateorinterval.json"
    },
    "time_offset_start": {
      "description": "time of day where first timestep starts",
      "$ref": "dateorinterval.json"
    },
    "nodes": {
      "description": "information nodes of the topology",
      "type": "array",
      "items": {
        "$ref": "node.json"
      }
    },
    "analysis": {
      "description": "analysis actions to perform",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "concatenateProno",
          "uploadData"
        ]
      }
    },
    "cal_id": {
      "type": "integer"
    },
    "plot_params": {
      "$ref": "plotparams.json"
    },
    "plot_variable": {
      "type": "array",
      "description": "Print graphs of selected variables for each node where said variables are defined, and save into pdf multipage files (one file per variable, one page per node)",
      "items": {
        "type": "object",
        "properties": {
          "var_id": {
            "type": "integer",
            "description": "Variable identifier"
          },
          "output": {
            "type": "string",
            "description": "Output file path"
          },
          "timestart": {
            "$ref": "dateorinterval.json"
          },
          "timeend": {
            "$ref": "dateorinterval.json"
          },
          "extra_sim_columns": {
            "type": "boolean"
          }
        },
        "required": [
          "var_id",
          "output"
        ]
      }
    },
    "interpolation_limit": {
      "description": "maximum duration between observations for interpolation",
      "$ref": "timeinterval.json"
    },
    "extrapolate": {
      "description": "Extrapolate observations outside the observation time domain, up to a maximum duration equal to interpolation_limit",
      "type": "boolean"
    },
    "report_file": {
      "description": "Write analysis report into this file",
      "type": "string"
    },
    "no_metadata": {
      "description": "Don't retrieve series metadata on loading from api",
      "type": "boolean",
      "default": false
    },
    "include_prono": {
      "description": "While executing .batchProcessInput, use series_prono to fill nulls of series",
      "type": "boolean",
      "default": false
    },
    "output_csv": {
      "description": "Save analysis results as csv into this path (relative to PYDRODELTA_DIR)",
      "type": "string"
    },
    "output_json": {
      "description": "Save analysis results as json into this path (relative to PYDRODELTA_DIR)",
      "type": "string"
    },
    "pivot": {
      "description": "If output_csv is set, pivot series into columns of the table",
      "type": "boolean",
      "default": true
    },
    "pretty": {
      "description": "For output_json, prettify json",
      "type": "boolean",
      "default": true
    },
    "upload_prono": {
      "description": "upload series_prono",
      "type": "boolean",
      "default": false
    },
    "qualifiers": {
      "description": "Add these qualifiers to the series_prono upload. Use together with upload_prono",
      "type": "array",
      "items": {
        "type": "string"
      },
      "examples": [
        [],
        ["inferior", "superior"]
      ]
    },
    "save_response": {
      "description": "Save forecast creation response into this file. Use together with upload_prono"
    },
    "save_post_data": {
      "description": "Save forecast creation request data into this file. Use together with upload_prono"
    }
  },
  "required": [
    "timestart",
    "timeend",
    "nodes"
  ],
  "additionalProperties": false
}